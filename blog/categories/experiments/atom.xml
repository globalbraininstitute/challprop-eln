<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Experiments | Electronic Laboratory Notebook]]></title>
  <link href="http://vveitas.github.io/blog/categories/experiments/atom.xml" rel="self"/>
  <link href="http://vveitas.github.io/"/>
  <updated>2015-01-07T22:31:15+01:00</updated>
  <id>http://vveitas.github.io/</id>
  <author>
    <name><![CDATA[vveitas]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Experiment 4/2: 3k Agents; randomJumpParameter 99]]></title>
    <link href="http://vveitas.github.io/blog/2015/01/05/experiment-4-slash-2-3k-agents-randomjumpparameter-99/"/>
    <updated>2015-01-05T18:59:56+01:00</updated>
    <id>http://vveitas.github.io/blog/2015/01/05/experiment-4-slash-2-3k-agents-randomjumpparameter-99</id>
    <content type="html"><![CDATA[<p>Changes to the code just before:</p>

<ul>
  <li>weightHistory parameter on every link, allowing to get all changes link weights with timestamps of events;</li>
  <li>bug fix: corrected the mess with reciprocal links;</li>
  <li>bug fix: links to generator of diversity were not set to 1 initially…;</li>
  <li>bug fix: got rid of testNG tests in favor of JUnit: some important tests were not passing because of that.</li>
</ul>

<p>Running 3000 agents with <code>randomJumpParameter</code> equal to <code>99</code> for a quick test of the refreshed codebase.</p>

<h2 id="analyses">Analyses</h2>

<p><a href="/blog/2015/01/05/analysis-4-dot-2-slash-1-benefit-increase/">Analysis 4.2/1: benefit increase</a></p>

<p>Nothing different from previous attemps - the benefit increase per unit of time is flat…</p>

<h2 id="all-simulation-parameters">All simulation parameters:</h2>

<pre><code>## $pathOnDisk
## [1] &quot;/media/data/gbi/eln/&quot;
## 
## $generateTestDataOnDisk
## [1] &quot;false&quot;
## 
## $tempConfigFile
## [1] &quot;/media/ramdisk/challprop.conf&quot;
## 
## $test
## [1] &quot;false&quot;
## 
## $graphDatabase
## [1] &quot;TitanCassandraLocal&quot;
## 
## $gephiVisualization
## [1] &quot;false&quot;
## 
## $useDatabaseOfVectors
## [1] &quot;true&quot;
## 
## $useDatabaseOfMatrixes
## [1] &quot;true&quot;
## 
## $rivalComponents
## [1] &quot;[0, 1, 2, 3, 4]&quot;
## 
## $cstSituation
## [1] &quot;0.05&quot;
## 
## $densityVectorSituation
## [1] &quot;0.25&quot;
## 
## $percnegSituation
## [1] &quot;0.2&quot;
## 
## $exponentSituation
## [1] &quot;2&quot;
## 
## $numberOfAgents
## [1] &quot;3000&quot;
## 
## $decayFactor
## [1] &quot;1&quot;
## 
## $decayRate
## [1] &quot;0.03&quot;
## 
## $reciprocityRate
## [1] &quot;0.2&quot;
## 
## $linkToGodWeight
## [1] &quot;1.0&quot;
## 
## $weightImportance
## [1] &quot;0.2&quot;
## 
## $believe
## [1] &quot;0.2&quot;
## 
## $propagateRate
## [1] &quot;0.4&quot;
## 
## $dimensions
## [1] &quot;10&quot;
## 
## $densityMatrix
## [1] &quot;0.5&quot;
## 
## $rfactor
## [1] &quot;0.5&quot;
## 
## $numberOfCycles
## [1] &quot;100&quot;
## 
## $newSituationsPerCycle
## [1] &quot;5&quot;
## 
## $learningRate
## [1] &quot;0.1&quot;
## 
## $randomJump
## [1] &quot;99&quot;
## 
## $propagationThreshold
## [1] &quot;0&quot;
## 
## $disableRandomJump
## [1] &quot;false&quot;
## 
## $maxBranchingFactor
## [1] &quot;1000&quot;
## 
## $respectKnowsLinksWeights
## [1] &quot;false&quot;
## 
## $bufferSize
## [1] &quot;10&quot;
## 
## $ignoreNonRivalCorrection
## [1] &quot;false&quot;
## 
## $cstNeed
## [1] &quot;0.05&quot;
## 
## $densityVectorNeed
## [1] &quot;0.5&quot;
## 
## $percnegNeed
## [1] &quot;0.5&quot;
## 
## $exponentNeed
## [1] &quot;2&quot;
## 
## $simulationStartWall
## [1] &quot;430949358764&quot;
## 
## $simulationStartCPU
## [1] &quot;1070546952&quot;
## 
## $simulationFinishWall
## [1] &quot;2892111420297&quot;
## 
## $simulationFinishCPU
## [1] &quot;1591309689320&quot;
## 
## $archivingFinishedWall
## [1] &quot;3109134407622&quot;
## 
## $archivingFinishedCPU
## [1] &quot;1679731358918&quot;
## 
## $deletingCassandraWall
## [1] &quot;3109145145508&quot;
## 
## $deletingCassandraCPU
## [1] &quot;1679741859707&quot;</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Experiment 4.1: 5k Agents; randomJumpParameter = 25]]></title>
    <link href="http://vveitas.github.io/blog/2015/01/02/experiment-4-dot-1-5k-agents-randomjumpparameter-equals-25/"/>
    <updated>2015-01-02T11:39:25+01:00</updated>
    <id>http://vveitas.github.io/blog/2015/01/02/experiment-4-dot-1-5k-agents-randomjumpparameter-equals-25</id>
    <content type="html"><![CDATA[<p>Without any change to the code, running 5000 agents with <code>randomJumpParameter</code> equal to <code>25</code> (the change from <code>99</code>) which should increase the probability of random jump considerably (see <a href="/blog/2014/12/27/analysis-3-slash-5-random-jumps/">random jump probability analysis</a>).</p>

<h2 id="analyses">Analyses</h2>

<p><a href="/blog/2015/01/02/analysis-4-dot-1-slash-1-benefit-increase/">Analysis 4.1/1: benefit increase</a></p>

<p>Hm, does not look very different from simulations with <code>randomJumpParameter=99</code>…</p>

<h2 id="all-simulation-parameters">All simulation parameters:</h2>

<pre><code>## $pathOnDisk
## [1] &quot;/media/data/gbi/eln/&quot;
## 
## $generateTestDataOnDisk
## [1] &quot;false&quot;
## 
## $tempConfigFile
## [1] &quot;/media/ramdisk/challprop.conf&quot;
## 
## $test
## [1] &quot;false&quot;
## 
## $graphDatabase
## [1] &quot;TitanCassandraLocal&quot;
## 
## $gephiVisualization
## [1] &quot;false&quot;
## 
## $useDatabaseOfVectors
## [1] &quot;true&quot;
## 
## $useDatabaseOfMatrixes
## [1] &quot;true&quot;
## 
## $rivalComponents
## [1] &quot;[0, 1, 2, 3, 4]&quot;
## 
## $cstSituation
## [1] &quot;0.05&quot;
## 
## $densityVectorSituation
## [1] &quot;0.25&quot;
## 
## $percnegSituation
## [1] &quot;0.2&quot;
## 
## $exponentSituation
## [1] &quot;2&quot;
## 
## $numberOfAgents
## [1] &quot;5000&quot;
## 
## $decayFactor
## [1] &quot;1&quot;
## 
## $decayRate
## [1] &quot;0.03&quot;
## 
## $reciprocityRate
## [1] &quot;0.2&quot;
## 
## $weightImportance
## [1] &quot;0.2&quot;
## 
## $believe
## [1] &quot;0.2&quot;
## 
## $propagateRate
## [1] &quot;0.4&quot;
## 
## $dimensions
## [1] &quot;10&quot;
## 
## $densityMatrix
## [1] &quot;0.5&quot;
## 
## $rfactor
## [1] &quot;0.5&quot;
## 
## $numberOfCycles
## [1] &quot;100&quot;
## 
## $newSituationsPerCycle
## [1] &quot;5&quot;
## 
## $learningRate
## [1] &quot;0.1&quot;
## 
## $randomJump
## [1] &quot;25&quot;
## 
## $propagationThreshold
## [1] &quot;0&quot;
## 
## $disableRandomJump
## [1] &quot;false&quot;
## 
## $maxBranchingFactor
## [1] &quot;1000&quot;
## 
## $respectKnowsLinksWeights
## [1] &quot;true&quot;
## 
## $bufferSize
## [1] &quot;10&quot;
## 
## $ignoreNonRivalCorrection
## [1] &quot;false&quot;
## 
## $cstNeed
## [1] &quot;0.05&quot;
## 
## $densityVectorNeed
## [1] &quot;0.5&quot;
## 
## $percnegNeed
## [1] &quot;0.5&quot;
## 
## $exponentNeed
## [1] &quot;2&quot;
## 
## $simulationStartWall
## [1] &quot;32867444290893&quot;
## 
## $simulationStartCPU
## [1] &quot;1130043720&quot;
## 
## $simulationFinishWall
## [1] &quot;49591970201648&quot;
## 
## $simulationFinishCPU
## [1] &quot;9252044727595&quot;
## 
## $archivingFinishedWall
## [1] &quot;50291455035290&quot;
## 
## $archivingFinishedCPU
## [1] &quot;9527283747749&quot;
## 
## $deletingCassandraWall
## [1] &quot;50291474065320&quot;
## 
## $deletingCassandraCPU
## [1] &quot;9527299143773&quot;</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Experiment 4: Playing With randomJumpParameter]]></title>
    <link href="http://vveitas.github.io/blog/2014/12/28/experiment-4-playing-with-randomjumpparameter/"/>
    <updated>2014-12-28T00:02:33+01:00</updated>
    <id>http://vveitas.github.io/blog/2014/12/28/experiment-4-playing-with-randomjumpparameter</id>
    <content type="html"><![CDATA[<h1 id="experimental-setup">Experimental setup:</h1>

<p>I am thinking of a few simulations with lower <code>randomJumpParameter</code> untill Analysis #../1 starts to show any signs of learning in the network. If that does not work, maybe trying variable parameters (i.e. stages of exploration-exploitation) will help..</p>

<p>Btw, before running simulations I need to add some more functionality to the main challprop code (or find out where it is hidden…) for accruing the history of weight changes for every link.</p>

<h1 id="sub-experiments">‘Sub-experiments’:</h1>

<ol>
  <li>
    <p><code>randomJumpParameter=25</code>: <a href="/blog/2015/01/02/experiment-4-dot-1-5k-agents-randomjumpparameter-equals-25/">Experiment 4-1</a></p>
  </li>
  <li>
    <p>The next experiment (and all that are comming after it) are based on somewhat corrected codebase (most important are related collection of weight changes history on every link; also some bug fixes on the way….).<a href="">Experiment 4-2</a> is just for trying out the new code with 3k agents and <code>randomJumpParameter=99</code>. Nothing resembling self-organization as expected…</p>
  </li>
  <li>
    <p><a href="{ post_url 2015-01-06-experiment-4-dot-3-3k-agents-randomjumpparameter-10 %}">Experiment 4-3</a>: <code>randomJumpParamter=10</code>, agents = 3000 (cancelled).</p>
  </li>
  <li>
    <p><a href="">Experiment 4-4</a>. This one is still running. I will try out now 3000 agents with <code>randomJumpParameter=25</code> hoping that it will finish in reasonable time. I also decrease the number of new challenges generated each generation - this would allow old challenges ot propagate longer hopefyll without  congesting the network.</p>
  </li>
</ol>

<h1 id="analyses-to-do">Analyses (to do):</h1>

<p>same as for Experiment 3:</p>

<p><a href="/blog/2014/12/26/analysis-3-slash-1-basic-statistics-and-benefit-increase/">Analysis #4/1: benefit increase</a></p>

<p><a href="/blog/2014/12/26/analysis-3-slash-2-distribution-of-original-challenges/">Analysis #4/2: distribution of challenges</a> </p>

<p><a href="/blog/2014/12/26/analysis-3-slash-3-distribution-of-link-weights/">Analysis #4/3: distribution of link weights</a> </p>

<p><a href="/blog/2014/12/26/analysis-3-slash-4-degree-distribution/">Analysis #4/4: degree distribution</a></p>

<p><a href="/blog/2014/12/27/analysis-3-slash-5-random-jumps/">Analysis #4/5: random jumps</a> (something to check due to low average degree…)</p>

<p>and some more..:</p>

<p><a href="">Analysis #4/..: degree/weight/benefit correlation</a> (comming soon)</p>

<p><a href="">Analysis #4/..: dynamics of link weights + clustering</a> (comming later - or maybe for the next experiment)</p>

<p><a href="">Analysis #4/..: relaxation dynamics</a> (comming even later…)</p>

<p>anything else ??</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Experiment 3: 10k Agents / 100 Generations]]></title>
    <link href="http://vveitas.github.io/blog/2014/12/26/experiment-3-10k-agents-slash-100-generations/"/>
    <updated>2014-12-26T19:23:04+01:00</updated>
    <id>http://vveitas.github.io/blog/2014/12/26/experiment-3-10k-agents-slash-100-generations</id>
    <content type="html"><![CDATA[<h1 id="experimental-setup">Experimental setup:</h1>

<p>This is repeated Experiment 2 with the corrected code. Therefore I copy-paste all text from Experiment 2 which is still relevant here (+ some more)… </p>

<p>I am repeating Evo’s original experiment with <a href="https://bitbucket.org/evob/chalprop_matlab">chalprop-matlab</a> and presented in GBI seminar which is available <a href="http://ecco.vub.ac.be/?q=node/209">here</a>. The main goal of performing experiments with challprop-java is to observe the self-organization of the network defined in <a href="http://pespmc1.vub.ac.be/Papers/ChallengePropagation.pdf">this paper</a> and test hypotheses formulated there.</p>

<p>Experiment version (<a href="https://bitbucket.org/gbi/challprop-experiments">challprop-experiments</a>): a85ba0e<br />
Simulation version of experiment (<a href="https://bitbucket.org/gbi/challprop">challprop-java</a>): 28831754 <br />
(use <code>git checkout $commit$</code> if needed)</p>

<h1 id="analyses">Analyses:</h1>

<p>Analyses on the results of experiment are presented in separate blogs:</p>

<p><a href="/blog/2014/12/26/analysis-3-slash-1-basic-statistics-and-benefit-increase/">Analysis #3/1: benefit increase</a></p>

<p><a href="/blog/2014/12/26/analysis-3-slash-2-distribution-of-original-challenges/">Analysis #3/2: distribution of challenges</a> </p>

<p><a href="/blog/2014/12/26/analysis-3-slash-3-distribution-of-link-weights/">Analysis #3/3: distribution of link weights</a> </p>

<p><a href="/blog/2014/12/26/analysis-3-slash-4-degree-distribution/">Analysis #3/4: degree distribution</a></p>

<p><a href="/blog/2014/12/27/analysis-3-slash-5-random-jumps/">Analysis #3/5: random jumps</a> (something to check due to low average degree…)</p>

<h2 id="verdict">Verdict</h2>

<p>The benefit/per unit of time does not change = no learning. I think the Analysis #3/5 indicates the direction for the next experiment <a href="/blog/2014/12/28/experiment-4-playing-with-randomjumpparameter/">4</a>, i.e. try changing <code>randomJumpParameter</code>.</p>

<h1 id="full-list-of-simulations-parameters">Full list of simulation’s parameters:</h1>
<p>This is a long list mainly for the reference..</p>

<pre><code>## $pathOnDisk
## [1] &quot;/media/data/gbi/eln/&quot;
## 
## $generateTestDataOnDisk
## [1] &quot;false&quot;
## 
## $tempConfigFile
## [1] &quot;/media/ramdisk/challprop.conf&quot;
## 
## $test
## [1] &quot;false&quot;
## 
## $graphDatabase
## [1] &quot;TitanCassandraLocal&quot;
## 
## $gephiVisualization
## [1] &quot;false&quot;
## 
## $useDatabaseOfVectors
## [1] &quot;true&quot;
## 
## $useDatabaseOfMatrixes
## [1] &quot;true&quot;
## 
## $rivalComponents
## [1] &quot;[0, 1, 2, 3, 4]&quot;
## 
## $cstSituation
## [1] &quot;0.05&quot;
## 
## $densityVectorSituation
## [1] &quot;0.25&quot;
## 
## $percnegSituation
## [1] &quot;0.2&quot;
## 
## $exponentSituation
## [1] &quot;2&quot;
## 
## $numberOfAgents
## [1] &quot;10000&quot;
## 
## $decayFactor
## [1] &quot;1&quot;
## 
## $decayRate
## [1] &quot;0.03&quot;
## 
## $reciprocityRate
## [1] &quot;0.2&quot;
## 
## $weightImportance
## [1] &quot;0.2&quot;
## 
## $believe
## [1] &quot;0.2&quot;
## 
## $propagateRate
## [1] &quot;0.4&quot;
## 
## $dimensions
## [1] &quot;10&quot;
## 
## $densityMatrix
## [1] &quot;0.5&quot;
## 
## $rfactor
## [1] &quot;0.5&quot;
## 
## $numberOfCycles
## [1] &quot;100&quot;
## 
## $newSituationsPerCycle
## [1] &quot;5&quot;
## 
## $learningRate
## [1] &quot;0.1&quot;
## 
## $randomJump
## [1] &quot;99&quot;
## 
## $propagationThreshold
## [1] &quot;0&quot;
## 
## $disableRandomJump
## [1] &quot;false&quot;
## 
## $maxBranchingFactor
## [1] &quot;1000&quot;
## 
## $respectKnowsLinksWeights
## [1] &quot;true&quot;
## 
## $bufferSize
## [1] &quot;10&quot;
## 
## $ignoreNonRivalCorrection
## [1] &quot;false&quot;
## 
## $cstNeed
## [1] &quot;0.05&quot;
## 
## $densityVectorNeed
## [1] &quot;0.5&quot;
## 
## $percnegNeed
## [1] &quot;0.5&quot;
## 
## $exponentNeed
## [1] &quot;2&quot;
## 
## $simulationStartWall
## [1] &quot;29423091026692&quot;
## 
## $simulationStartCPU
## [1] &quot;1036002841&quot;
## 
## $simulationFinishWall
## [1] &quot;53857285173308&quot;
## 
## $simulationFinishCPU
## [1] &quot;13135435550944&quot;
## 
## $archivingFinishedWall
## [1] &quot;54718185250031&quot;
## 
## $archivingFinishedCPU
## [1] &quot;13414696410662&quot;
## 
## $deletingCassandraWall
## [1] &quot;54718201348112&quot;
## 
## $deletingCassandraCPU
## [1] &quot;13414709258233&quot;</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Experiment 2: 10k Agents / 100 Generations (OUTDATED)]]></title>
    <link href="http://vveitas.github.io/blog/2014/12/09/experiment-2-10k-agents-slash-100-generations/"/>
    <updated>2014-12-09T16:37:43+01:00</updated>
    <id>http://vveitas.github.io/blog/2014/12/09/experiment-2-10k-agents-slash-100-generations</id>
    <content type="html"><![CDATA[<h1 id="outdated">Outdated</h1>
<p>The data of this experiment is not exact due to a few bugs found during analyses.</p>

<ul>
  <li>The calculation of links between agents was not correct, because ‘knows’ links also include links from generator of diversity to agents. Corrected with commit No. <a href="https://bitbucket.org/gbi/challprop-analytics/commits/435c157459204acdff2db5807b6498128df0bca4">435c157</a>;</li>
  <li>Agents were propagating challenges through the links which are strongest; without explicit checking this resulted in agents propagating challenges back to generator of diversity as these where the strongest links in the beginning… Corrected with commit <a href="https://bitbucket.org/gbi/challprop/commits/a0ea0722994165c1d1bda05969bd83d27f22d887">a0ea072</a></li>
  <li>Last but not least the was an error when making a random jump - random jump was not being performed in case there are existing link to another agent, which has put a limit on the number of random links in simulation (until every agent has at least one link..). Corrected with commit <a href="https://bitbucket.org/gbi/challprop/commits/d7050fd816c674b61cfab6ac67915c7e7b79bb1e">d7050fd</a>.</li>
</ul>

<p>See <a href="/blog/2014/12/26/experiment-3-10k-agents-slash-100-generations/">Experiment 3</a> for the results with the corrected code.</p>

<h1 id="experimental-setup">Experimental setup:</h1>

<p>I am repeating Evo’s original experiment with <a href="https://bitbucket.org/evob/chalprop_matlab">chalprop-matlab</a> and presented in GBI seminar which is available <a href="http://ecco.vub.ac.be/?q=node/209">here</a>. The main goal of performing experiments with challprop-java is to observe the self-organization of the network defined in <a href="http://pespmc1.vub.ac.be/Papers/ChallengePropagation.pdf">this paper</a> and test hypotheses formulated there.</p>

<p>Experiment version (<a href="https://bitbucket.org/gbi/challprop-experiments">challprop-experiments</a>): fecb9bd<br />
Simulation version of experiment (<a href="https://bitbucket.org/gbi/challprop">challprop-java</a>): 0f1bdd2 <br />
(use <code>git checkout $commit$</code> if needed)</p>

<h1 id="analyses">Analyses:</h1>

<p>Quite a few things can be checked on the data generated by the simulation. I perform a related analysis for each of them and report results in separate blog posts:</p>

<p><a href="/blog/2014/12/16/analysis-2-slash-1-basic-statistics/">Analysis #2/1: benefit increase</a> (does not look good imho…)</p>

<p><a href="/blog/2014/12/19/analysis-2-slash-2-distribution-of-original-challenges/">Analysis #2/2: distribution of original challenges</a> </p>

<p><a href="/blog/2014/12/21/analysis-2-slash-3-distribution-of-link-weights/">Analysis #2/3: distribution of link weights</a> </p>

<p><a href="/blog/2014/12/23/analysis-2-slash-4-degree-distribution/">Analysis #2/4: degree distribution</a></p>

<p><a href="">Analysis #2/..: degree/weight/benefit correlation</a> (comming soon)</p>

<p><a href="">Analysis #2/..: dynamics of link weights</a> (comming later - or maybe for the next experiment)</p>

<p><a href="">Analysis #2/..: relaxation</a> (comming even later…)</p>

<h1 id="full-list-of-simulations-parameters">Full list of simulation’s parameters:</h1>
<p>This is a long list mainly for the reference..</p>

<pre><code>## $graphDatabase
## [1] &quot;TitanCassandraLocal&quot;
## 
## $gephiVisualization
## [1] &quot;false&quot;
## 
## $useDatabaseOfVectors
## [1] &quot;true&quot;
## 
## $useDatabaseOfMatrixes
## [1] &quot;true&quot;
## 
## $rivalComponents
## [1] &quot;[0, 1, 2, 3, 4]&quot;
## 
## $cstSituation
## [1] &quot;0.05&quot;
## 
## $densityVectorSituation
## [1] &quot;0.25&quot;
## 
## $percnegSituation
## [1] &quot;0.2&quot;
## 
## $exponentSituation
## [1] &quot;2&quot;
## 
## $numberOfAgents
## [1] &quot;10000&quot;
## 
## $decayFactor
## [1] &quot;1&quot;
## 
## $decayRate
## [1] &quot;0.03&quot;
## 
## $reciprocityRate
## [1] &quot;0.2&quot;
## 
## $weightImportance
## [1] &quot;0.2&quot;
## 
## $believe
## [1] &quot;0.2&quot;
## 
## $propagateRate
## [1] &quot;0.4&quot;
## 
## $dimensions
## [1] &quot;10&quot;
## 
## $densityMatrix
## [1] &quot;0.5&quot;
## 
## $rfactor
## [1] &quot;0.5&quot;
## 
## $numberOfCycles
## [1] &quot;100&quot;
## 
## $newSituationsPerCycle
## [1] &quot;5&quot;
## 
## $learningRate
## [1] &quot;0.1&quot;
## 
## $randomJump
## [1] &quot;99&quot;
## 
## $propagationThreshold
## [1] &quot;0&quot;
## 
## $disableRandomJump
## [1] &quot;false&quot;
## 
## $maxBranchingFactor
## [1] &quot;1000&quot;
## 
## $respectKnowsLinksWeights
## [1] &quot;true&quot;
## 
## $bufferSize
## [1] &quot;10&quot;
## 
## $ignoreNonRivalCorrection
## [1] &quot;false&quot;
## 
## $cstNeed
## [1] &quot;0.05&quot;
## 
## $densityVectorNeed
## [1] &quot;0.5&quot;
## 
## $percnegNeed
## [1] &quot;0.5&quot;
## 
## $exponentNeed
## [1] &quot;2&quot;
## 
## $simulationStartWall
## [1] &quot;29423091026692&quot;
## 
## $simulationStartCPU
## [1] &quot;1036002841&quot;
## 
## $simulationFinishWall
## [1] &quot;53857285173308&quot;
## 
## $simulationFinishCPU
## [1] &quot;13135435550944&quot;
## 
## $archivingFinishedWall
## [1] &quot;54718185250031&quot;
## 
## $archivingFinishedCPU
## [1] &quot;13414696410662&quot;
## 
## $deletingCassandraWall
## [1] &quot;54718201348112&quot;
## 
## $deletingCassandraCPU
## [1] &quot;13414709258233&quot;</code></pre>

]]></content>
  </entry>
  
</feed>
